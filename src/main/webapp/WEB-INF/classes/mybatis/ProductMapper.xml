<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">
    <resultMap  type="product" id="productMap">
        <id column="product_code" property="productCode" />
        <id column="product_type" property="productType" />
        <id column="product_name" property="productName" />
        <id column="product_price" property="productPrice" />
        <id column="product_unit" property="productUnit" />
        <id column="product_country" property="productCountry" />
        <id column="product_species" property="productSpecies" />
        <id column="product_company" property="productCompany" />
        <id column="product_file" property="productFile" />
        <id column="product_tier" property="productTier" />
    </resultMap>

    <insert id="productInsert" parameterType="product">
        insert into product values (#{productCode}, #{productType}, #{productName}, #{productPrice}, #{productUnit}, #{productCountry},
                                    #{productSpecies}, #{productCompany}, 0, #{productFile})
    </insert>

    <select id="productCountByTier" parameterType="map" resultType="int">
        select count(*) from product where product_tier = #{memberTier}
    </select>

    <select id="productCount" parameterType="map" resultType="int">
        select count(*) from product
    </select>

    <select id="productSearchCountByTier" parameterType="map" resultType="int">
        select count(*) from product where product_tier = #{memberTier} and product_name LIKE CONCAT('%',#{searchText},'%')
    </select>

    <select id="productSearchCount" parameterType="String" resultType="int">
        select count(*) from product where product_name LIKE CONCAT('%',#{searchText},'%')
    </select>

    <select id="productSet" parameterType="int" resultType="int">
        set @rownum := 0
    </select>

    <select id="productList" parameterType="map" resultMap="productMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from product a, (select @rownum := 0) tmp
        order by product_code ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="productListByTier" parameterType="map" resultMap="productMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from product a, (select @rownum := 0) tmp
        where product_tier = #{memberTier} order by product_code ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="productSearchListByTier" parameterType="map" resultMap="productMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from product a, (select @rownum := 0) tmp
        where product_tier = #{memberTier} and product_name
        LIKE CONCAT('%',#{searchText},'%') order by product_code) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="productSelectOne" parameterType="String" resultMap="productMap">
        select * from product where product_code =  #{productCode}
    </select>

</mapper>