<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
    <resultMap type="member" id="memberMap">
        <id column="member_id" property="memberId" />
        <id column="member_name" property="memberName" />
        <id column="member_company_name" property="memberCompanyName" />
        <id column="member_password" property="memberPassword" />
        <id column="member_tel" property="memberTel" />
        <id column="member_company_tel" property="memberCompanyTel" />
        <id column="member_address" property="memberAddress" />
        <id column="member_detail_address" property="memberDetailAddress" />
        <id column="member_delivery_address" property="memberDeliveryAddress" />
        <id column="member_detail_delivery_address" property="memberDetailDeliveryAddress" />
        <id column="member_email" property="memberEmail" />
        <id column="member_file" property="memberFile" />
        <id column="member_fran_code" property="memberFranCode" />
        <id column="member_tier" property="memberTier" />
    </resultMap>

    <insert id="memberInsert" parameterType="member">
        insert into member values (#{memberId}, #{memberName}, #{memberCompanyName}, #{memberPassword}, #{memberTel}, #{memberCompanyTel},
                                   #{memberAddress}, #{memberDetailAddress}, #{memberDeliveryAddress}, #{memberDetailDeliveryAddress}, #{memberEmail}, #{memberFile}, 0000, 0, NOW())
    </insert>

    <select id="rownumSet" parameterType="int" resultType="int">
        set @rownum := 0
    </select>

    <select id="memberCount" parameterType="map" resultType="int">
        select count(*) from member where NOT member_id = "admin"
    </select>

    <select id="memberList" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_tier ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberSelectOne" parameterType="String" resultMap="memberMap">
        select * from member where member_id = #{memberId}
    </select>

    <select id="memberListByMemberCompanyName" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_company_name ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListDescByMemberCompanyName" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_company_name desc ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListByMemberFranCode" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_fran_code ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListDescByMemberFranCode" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_fran_code desc ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListByMemberId" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_id ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListDescByMemberId" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_id desc ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListByMemberName" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_name ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListDescByMemberName" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_name desc ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListByMemberTel" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_tel ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListDescByMemberTel" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_tel desc ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListByMemberCompanyTel" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_company_tel ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListDescByMemberCompanyTel" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_company_tel desc ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListByMemberTier" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_tier ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberListDescByMemberTier" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where NOT member_id = "admin" order by member_tier desc ) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberSearchListByMemberCompanyName" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where member_company_name and NOT member_id = "admin" LIKE CONCAT('%',#{searchText},'%')) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberSearchListByMemberFranCode" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where member_fran_code and NOT member_id = "admin" LIKE CONCAT('%',#{searchText},'%')) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberSearchListByMemberId" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where member_id and NOT member_id = "admin" LIKE CONCAT('%',#{searchText},'%')) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberSearchListByMemberName" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where member_name and NOT member_id = "admin" LIKE CONCAT('%',#{searchText},'%')) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberSearchListByMemberTel" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where member_tel and NOT member_id = "admin" LIKE CONCAT('%',#{searchText},'%')) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberSearchListByMemberCompanyTel" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where member_company_tel and NOT member_id = "admin" LIKE CONCAT('%',#{searchText},'%')) b
        where b.rownum between #{start} and #{end};
    </select>

    <select id="memberSearchListByMemberTier" parameterType="map" resultMap="memberMap">
        select * from (
        select @rownum := @rownum + 1 as rownum,
        a.* from member a, (select @rownum := 0) tmp
        where member_tier and NOT member_id = "admin" LIKE CONCAT('%',#{searchText},'%')) b
        where b.rownum between #{start} and #{end};
    </select>

    <update id="memberTierUpdate" parameterType="map">
        update member set member_tier = #{memberTier} where member_id = #{memberId}
    </update>

    <update id="memberUpdate" parameterType="member">
        update member set member_name = #{memberName}, member_company_name = #{memberCompanyName}, member_password = #{memberPassword},
                          member_tel = #{memberTel}, member_company_tel = #{memberCompanyTel}, member_address = #{memberAddress},
                          member_detail_address = #{memberDetailAddress}, member_delivery_address = #{memberDeliveryAddress},
                          member_detail_delivery_address = #{memberDetailDeliveryAddress}, member_email = #{memberEmail}, member_file = #{memberFile}
                      where member_id = #{memberId}
    </update>

    <update id="memberUpdateNotPassword" parameterType="member">
        update member set member_name = #{memberName}, member_company_name = #{memberCompanyName},
                          member_tel = #{memberTel}, member_company_tel = #{memberCompanyTel}, member_address = #{memberAddress},
                          member_detail_address = #{memberDetailAddress}, member_delivery_address = #{memberDeliveryAddress},
                          member_detail_delivery_address = #{memberDetailDeliveryAddress}, member_email = #{memberEmail}, member_file = #{memberFile}
        where member_id = #{memberId}
    </update>

</mapper>